// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database.Context;

namespace WebApp.Migrations
{
    [DbContext(typeof(MainContex))]
    [Migration("20201211173459_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WebApp.Model.Citizenship", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PersonId");

                    b.ToTable("Citizenships");
                });

            modelBuilder.Entity("WebApp.Model.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("WebApp.Model.FriendEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FirstPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SecondPersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("FriendEntrys");
                });

            modelBuilder.Entity("WebApp.Model.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTimeOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("WebApp.Model.Quality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Beauty")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ByPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Character")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Communication")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Humor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nature")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OfPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Smile")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Qualities");
                });

            modelBuilder.Entity("WebApp.Model.Citizenship", b =>
                {
                    b.HasOne("WebApp.Model.City", null)
                        .WithMany("Citizenships")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Model.Person", null)
                        .WithMany("Citizenships")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp.Model.FriendEntry", b =>
                {
                    b.HasOne("WebApp.Model.Person", null)
                        .WithMany("Friends")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WebApp.Model.City", b =>
                {
                    b.Navigation("Citizenships");
                });

            modelBuilder.Entity("WebApp.Model.Person", b =>
                {
                    b.Navigation("Citizenships");

                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
